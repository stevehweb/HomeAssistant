blueprint:
  name: Motion and Presence Activated Lights/Switches
  description: Turns on specified lights and/or switches when motion or presence is detected by any of the specified sensors. The devices turn off after a configurable delay once all sensors are clear. An optional toggle can be used to disable the automation.
  domain: automation
  input:
    motion_presence_sensors:
      name: Motion or Presence Sensors
      description: The sensor(s) that will trigger the automation. Can be any mix of motion or presence sensors.
      selector:
        target:
          entity:
            domain: binary_sensor
            device_class:
              - motion
              - presence
    lights_to_control:
      name: Lights to Control
      description: The light(s) that will be turned on.
      selector:
        target:
          entity:
            domain: light
    switches_to_control:
      name: (Optional) Switches to Control
      description: The switch(es) that will be turned on.
      default: {}
      selector:
        target:
          entity:
            domain: switch
    brightness_level:
      name: Brightness Level
      description: The brightness percentage for the lights when they turn on.
      selector:
        number:
          min: 1
          max: 100
          step: 1
          unit_of_measurement: "%"
          mode: slider
      default: 100
    turn_off_delay:
      name: Turn-off Delay
      description: The time in seconds to wait after all sensors are clear before turning off the devices.
      selector:
        number:
          min: 0
          unit_of_measurement: seconds
          mode: box
      default: 120
    disable_toggle:
      name: (Optional) Disabling Input Boolean
      description: If specified, the automation will only run if this toggle is 'off'.
      default:
      selector:
        entity:
          domain: input_boolean

mode: restart

trigger:
  - platform: state
    entity_id: !input motion_presence_sensors
    to: "on"
    from: "off"

condition:
  - condition: template
    value_template: "{{ '!input disable_toggle' == '' or is_state('!input disable_toggle', 'off') }}"

action:
  - service: light.turn_on
    target: !input lights_to_control
    data:
      brightness_pct: !input brightness_level
  - service: switch.turn_on
    target: !input switches_to_control
  - wait_template: "{{ expand(!input motion_presence_sensors) | selectattr('state', 'eq', 'on') | list | count == 0 }}"
  - delay:
      seconds: !input turn_off_delay
  - service: light.turn_off
    target: !input lights_to_control
  - service: switch.turn_off
    target: !input switches_to_control
