blueprint:
  name: Motion-activated Lights with Optional Disable
  description: >
    Turns on specified lights or switches when motion is detected by one or more sensors.
    The lights will turn off after a configurable delay once all motion sensors are clear.
    An optional toggle can be used to disable the automation.
  domain: automation
  input:
    motion_entity:
      name: Motion/Presence Sensor(s)
      description: The motion or presence sensor(s) that will trigger the automation.
      selector:
        entity:
          domain: binary_sensor
          device_class:
            - motion
            - presence
          multiple: true
    light_target:
      name: Target Lights and Switches
      description: The lights and/or switches to turn on when motion is detected.
      selector:
        target:
          entity:
            domain:
              - light
              - switch
    brightness_level:
      name: Brightness Level
      description: The brightness level (1-100%) for any light entities. Ignored for switches.
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"
          mode: slider
      default: 100
    no_motion_wait:
      name: Turn-off Delay
      description: The time to wait after all motion has stopped before turning off the lights.
      selector:
        time:
      default: "00:05:00"
    disable_switch:
      name: (Optional) Disable Switch
      description: Select an input_boolean helper to disable this automation when 'on'.
      selector:
        entity:
          domain: input_boolean
      default: {}

mode: restart

trigger:
  - platform: state
    entity_id: !input motion_entity
    to: "on"
    id: motion_detected
  - platform: state
    entity_id: !input motion_entity
    to: "off"
    id: motion_stopped

variables:
  motion_sensors: !input motion_entity
  disable_switch: !input disable_switch
  all_motion_off: "{{ expand(motion_sensors) | selectattr('state', 'eq', 'on') | list | count == 0 }}"

condition:
  - condition: template
    value_template: "{{ disable_switch == {} or is_state(disable_switch, 'off') }}"

action:
  - choose:
      - conditions:
          - condition: trigger
            id: motion_detected
        actions:
          - service: homeassistant.turn_on
            target: !input light_target
            data:
              brightness_pct: !input brightness_level
      - conditions:
          - condition: trigger
            id: motion_stopped
          - condition: template
            value_template: "{{ all_motion_off }}"
        actions:
          - delay: !input no_motion_wait
          - condition: template
            value_template: "{{ all_motion_off }}"
          - service: homeassistant.turn_off
            target: !input light_target
